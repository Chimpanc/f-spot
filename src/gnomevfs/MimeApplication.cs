// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome.Vfs {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public struct MimeApplication {

		public string Id;
		public string Name;
		public string Command;
		public bool CanOpenMultipleFiles;
		public Gnome.Vfs.MimeApplicationArgumentType ExpectsUris;
		private IntPtr _supported_uri_schemes;
		public bool RequiresTerminal;
		private IntPtr _reserved1;
		private IntPtr _reserved2;

		public static Gnome.Vfs.MimeApplication Zero = new Gnome.Vfs.MimeApplication ();

		public static Gnome.Vfs.MimeApplication New(IntPtr raw) {
			if (raw == IntPtr.Zero) {
				return Gnome.Vfs.MimeApplication.Zero;
			}
			Gnome.Vfs.MimeApplication self = new Gnome.Vfs.MimeApplication();
			self = (Gnome.Vfs.MimeApplication) Marshal.PtrToStructure (raw, self.GetType ());
			return self;
		}

		[DllImport("libgnomevfs-2-0.dll")]
		static extern IntPtr gnome_vfs_mime_application_new_from_id(string id);

		public static MimeApplication NewFromId(string id)
		{
			return MimeApplication.New (gnome_vfs_mime_application_new_from_id(id));
		}

		[DllImport("libgnomevfs-2-0.dll")]
		static extern int gnome_vfs_mime_application_launch_with_env(ref Gnome.Vfs.MimeApplication raw, IntPtr uris, string envp);

		public Gnome.Vfs.Result LaunchWithEnv(GLib.List uris, string envp) {
			int raw_ret = gnome_vfs_mime_application_launch_with_env(ref this, uris.Handle, envp);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

		[DllImport("libgnomevfs-2-0.dll")]
		static extern int gnome_vfs_mime_application_launch(ref Gnome.Vfs.MimeApplication raw, IntPtr uris);

		public Gnome.Vfs.Result Launch(GLib.List uris) {
			int raw_ret = gnome_vfs_mime_application_launch(ref this, uris.Handle);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

		[DllImport("libgnomevfs-2-0.dll")]
		static extern IntPtr gnome_vfs_mime_application_copy(ref Gnome.Vfs.MimeApplication raw);

		public Gnome.Vfs.MimeApplication Copy() {
			IntPtr raw_ret = gnome_vfs_mime_application_copy(ref this);
			Gnome.Vfs.MimeApplication ret = Gnome.Vfs.MimeApplication.New (raw_ret);
			return ret;
		}

		[DllImport("libgnomevfs-2-0.dll")]
		static extern void gnome_vfs_mime_application_free(ref Gnome.Vfs.MimeApplication raw);

		public void Free() {
			gnome_vfs_mime_application_free(ref this);
		}

		[DllImport("libgnomevfs-2-0.dll")]
		static extern void gnome_vfs_mime_application_list_free(IntPtr list);

		public static void ListFree(GLib.List list) {
			gnome_vfs_mime_application_list_free(list.Handle);
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
