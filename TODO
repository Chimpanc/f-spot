A lot needs to be done before F-Spot is useful!  Here is a list of
tasks for those who want to pick them up.

Basic functionality:

	- GPhoto (http://www.gphoto.org) integration.  It should be
          possible to just plug the camera in and have F-Spot import
          the pictures from it.  Additionally, it would be nice to
          have support for the new Hardware Abstraction Layer
          (http://ometer.com/hardware.html).  There is a patch in
	  http://bugzilla.ximian.com/ that provides this but it has
	  bitrotted a little and needs to be cleaned up.

	- Search entry.  We need an entry where you can type something
          and then the UI will update showing you all the pictures
          that match.  (Probably the search should match the
          description, the name, and the tags of each picture.)  The
          search entry should probably be on the right side of the
          main toolbar.

	- Web export.  We need a set of web templates and a command to
          upload a webpage after the user has selected one of them.
          Webpages can be uploaded using ssh: or ftp: with GNOME VFS.

	- Web Exports: Option to upload scaled-down versions of the images.

	- Cope with images not being on the disk, and flag those as
	  available offline (for central backup vs laptop display).

	- Printing.  I know nothing about photo printing on Linux...
          But we obviously need the ability to print.  Also, aside
          from using a local printer, it should support ordering a
          print from one of the various online printing services.  A
          good starting point should be this:  http://gimp-print.sourceforge.net/

	- Color coding for tags.  Each category should get a different
          color and that color should be reflected in the tag icon.
          See how Photoshop Album does it here:

	  	http://www.dpreview.com/reviews/adobephotoshopalbum/images/tagviews.jpg

	  (See how "People" tags are yellow and "Places" tags are
	  green.)

	  Also we need those three different viewing modes for tags...
	  Right now it just uses GtkTreeView but a custom widget might
	  be better so we can lay large tags out as in that
	  screenshot.

	- Desaturation.  It should be possible to turn images into
          B&W; a plus would be to let the user to select custom mixing
          values for the R, G, B channels (e.g. say "I want 70% green,
          20% red, 10% blue).

	- Automatic color enhancement and level adjustment.  the code
          can probably be stolen from the GIMP (http://www.gimp.org)

	- Red eye reduction.  You should be able to select a rectangle
          and F-Spot would remove red eye effect from that area.

	- Context-sensitive menu:

		Copy file location.
		Delete file from library.
		Move file.

	- Shortcuts:
		Next page/prev page (PgDn and Space, PgUp and backspace)
		Home: first image
		End: last image
			
More fancy features:

	- Image-based searches.  In Photoshop Album you can look for
          pictures similar to another one.  Also ImgSeek allows the
          user to draw something on the screen and find pictures that
          look similar to what the user drew; it would be really cool
          to have something like this in F-Spot.  See
          http://imgseek.sourceforge.net/

  	- Photo stitching.  F-Spot should recognize a set of panorama
          pictures from a camera and allow to launch Panorama Tools on
          them.  While the Panorama Tools are very advanced and can
          give very good results, the current Linux GUI for them is
          horrible, it would be nice if someone wrote a GTK+ front-end
          to them...  http://www.path.unimelb.edu.au/~dersch/

	  Of course the front-end should try to figure out as much as
	  possible from the image's EXIF tags so that the user doesn't
	  have to type in the lens type etc. manually.
